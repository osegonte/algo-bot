# XAU/USD Tick Trading Bot Requirements
# Core dependencies for gold scalping with tick-level precision

# =================================================================
# CORE TRADING DEPENDENCIES
# =================================================================

# Alpaca trading API for live market data and order execution
alpaca-trade-api>=3.0.2

# WebSocket client for real-time tick data streaming
websocket-client>=1.6.0

# HTTP requests for API calls and data fetching
requests>=2.31.0

# Numerical computing for price analysis and calculations
numpy>=1.24.0

# Date and time handling for market sessions and timestamps
python-dateutil>=2.8.2

# =================================================================
# DATA PROCESSING AND ANALYSIS
# =================================================================

# Pandas for data manipulation and analysis (optional but recommended)
pandas>=2.0.0

# Scientific computing library
scipy>=1.10.0

# =================================================================
# MACHINE LEARNING DEPENDENCIES (OPTIONAL)
# =================================================================

# Scikit-learn for ML model training and pattern recognition
scikit-learn>=1.3.0

# Feature engineering and data preprocessing
pandas>=2.0.0

# =================================================================
# TECHNICAL ANALYSIS (OPTIONAL)
# =================================================================

# TA-Lib for advanced technical indicators
# Note: TA-Lib requires separate binary installation
# For Ubuntu/Debian: sudo apt-get install libta-lib-dev
# For Windows: Download from https://www.lfd.uci.edu/~gohlke/pythonlibs/#ta-lib
# TA-Lib>=0.4.25

# Alternative technical analysis library (easier to install)
talib-binary>=0.4.25

# =================================================================
# DATABASE AND LOGGING (OPTIONAL)
# =================================================================

# SQLite support (included in Python standard library)
# No additional dependencies required for SQLite

# Enhanced logging and data export
openpyxl>=3.1.0  # For Excel export functionality

# =================================================================
# DEVELOPMENT AND TESTING
# =================================================================

# Testing framework
pytest>=7.4.0

# Code formatting and linting
black>=23.0.0
flake8>=6.0.0

# Type checking
mypy>=1.5.0

# =================================================================
# SYSTEM MONITORING AND PERFORMANCE
# =================================================================

# Memory and CPU monitoring
psutil>=5.9.0

# Advanced timing and profiling
line-profiler>=4.1.0

# =================================================================
# CONFIGURATION AND UTILITIES
# =================================================================

# Configuration file handling
configparser  # Included in standard library

# JSON handling for data serialization
# json  # Included in standard library

# UUID generation for trade IDs
# uuid  # Included in standard library

# Threading and async support
# asyncio  # Included in standard library
# threading  # Included in standard library

# =================================================================
# OPTIONAL ENHANCEMENTS
# =================================================================

# Real-time plotting and visualization
matplotlib>=3.7.0
plotly>=5.15.0

# Advanced statistical analysis
statsmodels>=0.14.0

# Parallel processing for ML training
joblib>=1.3.0

# Memory-efficient data structures
pyarrow>=12.0.0

# =================================================================
# INSTALLATION NOTES
# =================================================================

# BASIC INSTALLATION (minimum requirements):
# pip install alpaca-trade-api websocket-client requests numpy python-dateutil

# FULL INSTALLATION (all features):
# pip install -r requirements.txt

# DEVELOPMENT INSTALLATION:
# pip install -r requirements.txt
# pip install pytest black flake8 mypy

# =================================================================
# PLATFORM-SPECIFIC NOTES
# =================================================================

# Windows users may need:
# - Microsoft Visual C++ Build Tools for some packages
# - Pre-compiled wheels from https://www.lfd.uci.edu/~gohlke/pythonlibs/

# Linux users may need:
# sudo apt-get update
# sudo apt-get install python3-dev build-essential libta-lib-dev

# macOS users may need:
# brew install ta-lib
# export TA_INCLUDE_PATH=/usr/local/include
# export TA_LIBRARY_PATH=/usr/local/lib

# =================================================================
# DOCKER SUPPORT
# =================================================================

# For containerized deployment, use the provided Dockerfile
# docker build -t xauusd-trading-bot .
# docker run -v $(pwd)/config.py:/app/config.py xauusd-trading-bot

# =================================================================
# CONDA ENVIRONMENT (ALTERNATIVE)
# =================================================================

# Create conda environment:
# conda create -n xauusd-bot python=3.9
# conda activate xauusd-bot
# conda install numpy pandas scipy scikit-learn matplotlib
# pip install alpaca-trade-api websocket-client

# =================================================================
# VERSION COMPATIBILITY
# =================================================================

# Python versions supported: 3.8, 3.9, 3.10, 3.11
# Recommended: Python 3.9 or 3.10 for best compatibility

# =================================================================
# SECURITY CONSIDERATIONS
# =================================================================

# For production deployment, also consider:
# cryptography>=41.0.0  # For API key encryption
# keyring>=24.0.0       # For secure credential storage
# python-dotenv>=1.0.0  # For environment variable management